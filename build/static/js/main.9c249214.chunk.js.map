{"version":3,"sources":["Containers/ListBuilder/Card.js","Containers/ListBuilder/ListItem.js","Components/Layout/InputBox.js","Containers/ListBuilder/ListBuilder.js","Components/Layout/Layout.js","Components/Layout/NavLinks.js","Components/Layout/SideDrawer.js","Components/Layout/BackDrop.js","Components/Layout/MainNav.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","style","children","ListItem","asd","itemname","itemflavor","itemqty","onClick","deleteItem","id","InputBox","useState","itemText","setitemText","flavorText","setflavorText","qtyText","setqtyText","newid","getid2","useEffect","console","log","setid","onChange","event","target","value","newitem","item","flavor","qty","additem","alert","ListBuilder","listx","setlistx","idcounter","id2","filter","x","getid","itemforindex","itemc","flavorc","qtyc","findIndex","itemrecieve","prevlistx","concat","map","itemx","index","key","layout","NavLinks","to","SideDrawer","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","BackDrop","MainNavigation","drawerIsOpen","SetDrawerIsOpen","closeDrawerBot","Fragment","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"maAaeA,G,MATF,SAACC,GACZ,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OAErDF,EAAMG,YCyBEC,EA7BE,SAAAJ,GAIT,OACR,6BACA,kBAAC,EAAD,CAAMC,UAAU,aAEhB,yBAAKA,UAAU,gBACP,yBAAKA,UAAU,cAAcD,EAAMK,KACnC,yBAAKJ,UAAU,oBACP,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,iBAAiBD,EAAMM,WAG9C,yBAAKL,UAAU,sBACf,yBAAMA,UAAU,iBAAiBD,EAAMO,YACvC,yBAAKN,UAAU,iBAAiBD,EAAMQ,YAG9C,yBAAKP,UAAU,gBACP,4BAAQA,UAAU,iBAAlB,QACA,4BAASA,UAAU,gBAAeQ,QArBR,WAAKT,EAAMU,WAAWV,EAAMW,MAqBtD,OAFR,QCiEeC,G,MAhFE,SAACZ,GAAU,IAAD,EAEGa,mBAAS,IAFZ,mBAEpBC,EAFoB,KAEXC,EAFW,OAOOF,mBAAS,IAPhB,mBAOpBG,EAPoB,KAOTC,EAPS,OAYCJ,mBAAS,IAZV,mBAYpBK,EAZoB,KAYZC,EAZY,KAuBvBC,EAAOpB,EAAMqB,OAAOP,EAASE,EAAWE,GAkCxC,OAXJI,qBAAU,WAINC,QAAQC,IAAI,2BACZD,QAAQC,IAAKJ,GACbpB,EAAMyB,MAAML,KAEd,CAACA,IAKF,kBAAC,EAAD,CAAOnB,UAAU,aAEjB,yBAAKA,UAAU,gBACZ,yBAAKA,UAAU,cAAf,gBACA,yBAAKA,UAAU,oBACV,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,gBAAgByB,SA9DtB,SAAAC,GACfZ,EAAYY,EAAMC,OAAOC,QA6DsCA,MAAQf,KAG7E,2BAAOb,UAAU,gBAAeyB,SA5DX,SAAAC,GACnBV,EAAcU,EAAMC,OAAOC,QA2D6BA,MAAQb,IAClE,2BAAOf,UAAU,gBAAeyB,SAxDX,SAAAC,GAClBR,EAAWQ,EAAMC,OAAOC,QAuD+BA,MAAQX,MAGlE,yBAAKjB,UAAU,gBACf,4BAAQA,UAAU,gBAAiBQ,QAhDf,WAEjB,IAAIW,EAAOpB,EAAMqB,OAAOP,EAASE,EAAWE,GACtCY,EAAQ,CAAEC,KAAKjB,EACLkB,OAAOhB,EACPiB,IAAIf,EACJP,GAAGS,GAIc,IAAdU,EAAQC,MAAyB,IAAbD,EAAQG,KAI/CjC,EAAMkC,QAAQJ,GAnBdf,EAAY,IAAKI,EAAW,IAAKF,EAAc,KAgB9BkB,MAAM,yCAqC1B,WCgCcC,EA5GI,WAAK,IAAD,EAEUvB,mBAEzB,CAAE,CAACF,GAAG,EAAEoB,KAAK,YAAYC,OAAO,UAAUC,IAAI,OAJ/B,mBAETI,EAFS,KAEHC,EAFG,KAQTC,EAAU,EAkBpB7B,EAAY,SAAC8B,GACTF,GAAS,SAACD,GAMT,OAHSA,EAAMI,QAAO,SAAAC,GAAC,OAAIA,EAAE/B,IAAI6B,QAQlCjB,QAAQC,IAAI,oBAAqBD,QAAQC,IAAIgB,GAC7CjB,QAAQC,IAAIa,IAObM,EAAM,SAACC,GAEN,IAAMC,EAAMD,EAAab,KACnBe,EAAQF,EAAaZ,OACrBe,EAAKH,EAAaX,IAIxB,OAFaI,EAAMW,WACX,SAAAN,GAAC,OAAGA,EAAEX,OAAOc,GAASH,EAAEV,SAASc,GAAWJ,EAAET,KAAKc,MA6BnE,OARAzB,qBAAU,WAEFC,QAAQC,IAAIa,KAElB,CAACA,IAKH,iCAAM,kBAAC,EAAD,CAAWH,QAzED,SAACe,GAEDV,GAAoB,EACpBU,EAAYtC,GAAI4B,EAAU,EAC1BhB,QAAQC,IAAI,gBAAiBe,GAAWhB,QAAQC,IAAI,uBAAuBD,QAAQC,IAAIyB,GAGvFX,GAAS,SAACY,GACV,OAAOA,EAAUC,OAAOF,OAiEFN,MAAOA,EAAOtB,OAxBvC,SAACwB,EAAMC,EAAQC,GAGpB,OAFaV,EAAMW,WACX,SAAAN,GAAC,OAAGA,EAAEX,OAAOc,GAASH,EAAEV,SAASc,GAAWJ,EAAET,KAAKc,MAsBCtB,MAnBtD,SAACL,GAERG,QAAQC,IAAI,qBAAsBD,QAAQC,IAAIJ,GAC9CG,QAAQC,IAAIa,EAAMjB,OAmBViB,EAAMe,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,EAAD,CACAC,IAAKD,EACL3C,GAAI0C,EAAM1C,GACVN,IAAKiD,EAAM,EAEXhD,SAAU+C,EAAMtB,KAChBxB,WAAY8C,EAAMrB,OAClBxB,QAAS6C,EAAMpB,IACfU,MAAOA,EACPjC,WAAYA,SCxFb8C,G,MATA,SAACxD,GACZ,OAAO,8BACR,4BAAQC,UAAU,eACZD,EAAMG,aCSAsD,G,YAZE,SAAAzD,GAEb,OACI,wBAAIC,UAAU,YAAYQ,QAAST,EAAMS,SACrC,4BAAI,kBAAC,IAAD,CAASiD,GAAI,SAAb,cACJ,4BAAI,kBAAC,IAAD,CAASA,GAAK,UAAd,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAK,iBAAd,cACJ,4BAAI,kBAAC,IAAD,CAASA,GAAK,YAAd,e,QCGDC,G,MAVI,SAAA3D,GACf,OAAO,kBAAC4D,EAAA,EAAD,CAAeC,GAAI7D,EAAM8D,KAChCC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GACZ,2BAAOjE,UAAU,cAAcQ,QAAST,EAAMS,SAAUT,EAAMG,aCCpDgE,G,MAPC,SAAAnE,GAEZ,OACI,yBAAKC,UAAW,WAAWQ,QAAST,EAAMS,YCuCnC2D,EAtCQ,SAAApE,GAAS,IAAD,EACWa,oBAAS,GADpB,mBACpBwD,EADoB,KACPC,EADO,KAMrBC,EAAiB,WACnBD,GAAgB,IAIpB,OAAQ,kBAAC,IAAME,SAAP,KACHH,GAAe,kBAAC,EAAD,CAAU5D,QAAS8D,IAInC,kBAAC,EAAD,KACI,4BAAQtE,UAAW,4BAA4BQ,QAdlC,WACjB6D,GAAgB,KAcR,+BACA,+BACA,gCAGJ,wBAAIrE,UAAU,0BAAyB,kBAAC,IAAD,CAAMyD,GAAG,KAAT,aACvC,yBAAKzD,UAAU,+BACX,kBAAC,EAAD,QAKR,kBAAC,EAAD,CAAa6D,KAAOO,GAChB,yBAAKpE,UAAU,+BACX,kBAAC,EAAD,CAAUQ,QAAS8D,QCbpBE,G,6KAbX,OACE,kBAAC,IAAD,KAEA,kBAAC,EAAD,MACA,6CAGA,kBAAC,EAAD,KAAa,kC,GATDC,cCDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrE,QAAQqE,MAAMA,EAAMC,c","file":"static/js/main.9c249214.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n    \n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\r\nimport   Card   from \"./Card\";\r\n\r\n\r\nconst ListItem = props => {         \r\n               const deletelocal =()=>{props.deleteItem(props.id);\r\n             \r\n               }\r\n        return(                    \r\n<div>                                                 \r\n<Card className=\"list-item\">\r\n\r\n<div className=\"list-subitem\">\r\n        <div className=\"list-index\">{props.asd}</div>\r\n        <div className=\"name-top-handler\">\r\n                <div className=\"list-name-wrapper\">\r\n                <div className=\"list-elements\">{props.itemname}</div>\r\n                </div>\r\n\r\n        <div className=\"list-name-wrapper2\">    \r\n        <div  className=\"list-elements\">{props.itemflavor}</div>\r\n        <div className=\"list-elements\">{props.itemqty}</div>\r\n        </div></div></div>\r\n        \r\n<div className=\"list-subitem\">\r\n        <button className=\"list-elements\" >EDIT</button>\r\n        <button  className=\"list-elements\"onClick={deletelocal}>DEL</button> </div>\r\n</Card>\r\n</div>                             \r\n                 \r\n        )   \r\n}\r\n\r\nexport default ListItem;\r\n","\r\nimport React, { Component, useState, useEffect } from \"react\";\r\n//import Aux from '../../Hoc/Aux';\r\nimport   Card   from '../../Containers/ListBuilder/Card';\r\n//import Listitem from '../../Containers/ListBuilder/ListItem';\r\n\r\nimport \"./InputBox.css\";\r\n\r\n\r\nconst InputBox = (props) =>{  \r\n\r\nconst [itemText,setitemText]= useState('');\r\nconst textChangeBot1= event =>{\r\n       setitemText(event.target.value);\r\n   }\r\n\r\nconst [flavorText,setflavorText]= useState('');\r\nconst textChangeBot2= event =>{\r\n   setflavorText(event.target.value);\r\n}\r\n\r\nconst [qtyText,setqtyText]= useState('');\r\nconst textChangeBot3= event =>{\r\n    setqtyText(event.target.value);\r\n}\r\n\r\n\r\nconst setnull=()=>{\r\n    // itemText = ''; qtyText= ''; flavorText= ''; without state , dosnt work\r\n    setitemText(''); setqtyText(''); setflavorText('');\r\n}\r\n\r\nlet newid= props.getid2(itemText,flavorText,qtyText);\r\n\r\nconst addItemLocal = ()=>\r\n{ \r\n    let newid= props.getid2(itemText,flavorText,qtyText);\r\n    const newitem={ item:itemText,\r\n                    flavor:flavorText,\r\n                    qty:qtyText,\r\n                    id:newid\r\n                    };\r\n                   \r\n    \r\n                    if(newitem.item=='' || newitem.qty=='')    \r\n                    {alert(\"Please enter item name and quantity\");\r\n                        return}\r\n\r\n    props.additem(newitem);\r\n    setnull();\r\n     \r\n\r\n \r\n};\r\n\r\nuseEffect(() =>{\r\n    \r\n    //console.log(listx[getid(itemrecieve)]);\r\n  \r\n    console.log(\"  was added at index : \");\r\n    console.log (newid );\r\n    props.setid(newid);\r\n\r\n},[newid]);\r\n\r\n\r\n    return(\r\n\r\n <Card  className=\"list-item\">\r\n\r\n <div className=\"list-subitem\">\r\n    <div className=\"list-index\">Enter item: </div>\r\n    <div className=\"name-top-handler\">\r\n         <div className=\"list-name-wrapper\">\r\n           <input className=\"list-elements\" onChange={textChangeBot1} value ={itemText}></input>\r\n         </div>\r\n            \r\n <input className=\"list-elements\"onChange={textChangeBot2} value ={flavorText}></input>\r\n <input className=\"list-elements\"onChange={textChangeBot3} value ={qtyText}></input>\r\n </div></div>\r\n \r\n <div className=\"list-subitem\">\r\n <button className=\"list-elements\"  onClick={addItemLocal} >ADD</button>\r\n </div>\r\n</Card>\r\n\r\n    );\r\n}\r\n\r\nexport default InputBox;\r\n\r\n/*\r\nlet  getid=()=>{\r\n};\r\n\r\nlet additem =()=>{\r\nprops.itemnew.push({item:\"x\",flavor:'y',qty:'10'});\r\nconsole.log(props.itemx);\r\n   }\r\n*/","import React, { Component,useState, useEffect } from \"react\";\r\n//import Aux from '../../Hoc/Aux';\r\n//import   Card   from \"./Card\";\r\nimport ListItem from \"./ListItem\";\r\nimport InputBox from \"../../Components/Layout/InputBox\";\r\n\r\nconst ListBuilder =()=>{ \r\n        \r\n      const  [listx,setlistx] =  useState( \r\n\r\n        [ {id:1,item:\"test item\",flavor:\"vanilla\",qty:'5'},\r\n        ]\r\n          );\r\n\r\n          let idcounter=1 ;\r\n\r\nlet addItemBot =(itemrecieve)=>{\r\n               \r\n                idcounter=idcounter+1;\r\n                itemrecieve.id= idcounter+1;\r\n                console.log(\"generated id:\" ,idcounter);console.log(\"recieved and adding\");console.log(itemrecieve);\r\n               // listx.push(itemrecieve); this worked for class\r\n               // setlistx(listx.concat(itemrecieve)); bad for sync etc\r\n                setlistx((prevlistx) =>{\r\n                return prevlistx.concat(itemrecieve);\r\n                \r\n              \r\n                });\r\n               \r\n }\r\n               \r\n        \r\nlet deleteItem =(id2) =>{\r\n        setlistx((listx) =>{                \r\n                \r\n                    \r\n        let abc=  listx.filter(x => x.id!=id2);  \r\n\r\n        \r\n         return abc;   \r\n       //return listx.splice(id2,1);       \r\n                                \r\n        });           \r\n      \r\n        console.log(\"delete called on\"); console.log(id2);\r\n        console.log(listx);\r\n       \r\n }\r\n\r\n\r\n\r\n\r\n const getid=(itemforindex)=>{\r\n\r\n        const itemc=itemforindex.item;\r\n        const flavorc=itemforindex.flavor;\r\n        const qtyc=itemforindex.qty;\r\n\r\n        const index= listx.findIndex(\r\n                x =>x.item===itemc && x.flavor===flavorc && x.qty==qtyc);\r\n        return index;   \r\n        }\r\n\r\n    \r\n       \r\nconst getid2=(itemc,flavorc,qtyc)=>{\r\n        const index= listx.findIndex(\r\n                x =>x.item===itemc && x.flavor===flavorc && x.qty==qtyc);\r\n        return index;   \r\n}\r\nconst setid = (newid) =>{\r\n        \r\n       console.log('this is the newid'); console.log(newid);\r\n       console.log(listx[newid]);\r\n       \r\n       // ID=newid;\r\n                  // return[...prevlistx,itemrecieve]\r\n}\r\n\r\n        \r\nuseEffect(()=>{\r\n       \r\n        console.log(listx);\r\n\r\n},[listx])\r\n\r\n      \r\n\r\nreturn(\r\n<div> <InputBox  additem={addItemBot} getid={getid} getid2={getid2} setid={setid}   />\r\n              \r\n              {                                \r\n               listx.map((itemx,index) =>(\r\n                <ListItem \r\n                key={index}\r\n                id={itemx.id} \r\n                asd={index+1}\r\n\r\n                itemname={itemx.item}\r\n                itemflavor={itemx.flavor}\r\n                itemqty={itemx.qty}\r\n                getid={getid}\r\n                deleteItem={deleteItem}\r\n        \r\n                           \r\n                //additem={this.additem}\r\n                ></ListItem>  ))\r\n                \r\n                }                         \r\n                             \r\n </div>          \r\n        );    \r\n}\r\n\r\nexport default ListBuilder;\r\n","import React from 'react';\r\n\r\nimport Aux from '../../Hoc/Aux';\r\nimport './Layout.css';\r\n\r\nconst layout = (props) =>{\r\n    return(<main>\r\n   <header className='main-header'>\r\n        {props.children}        \r\n    </header>  \r\n    </main>\r\n\r\n);\r\n}\r\nexport default layout;","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n\r\n    return(\r\n        <ul className=\"nav-links\" onClick={props.onClick}>\r\n            <li><NavLink to =\"/List\">ItemsList</NavLink></li>\r\n            <li><NavLink to = \"/order\">OrderStatus</NavLink></li>\r\n            <li><NavLink to = \"/user/account\">MyAccount</NavLink></li>\r\n            <li><NavLink to = \"/signout\">SignOut</NavLink></li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = props =>{\r\n    return <CSSTransition in={props.show}\r\n    timeout={200}\r\n    classNames=\"slide-in-left\"\r\n    mountOnEnter\r\n    unmountOnExit\r\n    ><aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n</CSSTransition>\r\n};\r\n\r\nexport default SideDrawer;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\n\r\nconst BackDrop= props =>{\r\n\r\n    return(\r\n        <div className =\"backdrop\" onClick={props.onClick}></div>\r\n    )\r\n}\r\n\r\nexport default BackDrop;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Layout from './Layout';\r\nimport './MainNav.css';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport BackDrop from './BackDrop';\r\n\r\nconst MainNavigation = props =>{\r\n    const [drawerIsOpen,SetDrawerIsOpen]= useState(false);\r\n\r\n    const openDrawerBot =() =>{\r\n        SetDrawerIsOpen(true);\r\n    }\r\n    const closeDrawerBot = () =>{\r\n        SetDrawerIsOpen(false);\r\n    \r\n    };\r\n\r\n    return( <React.Fragment>\r\n        {drawerIsOpen &&<BackDrop onClick={closeDrawerBot} />}\r\n\r\n       \r\n        \r\n        <Layout>\r\n            <button className= \"main-navigation__menu-btn\" onClick={openDrawerBot}>\r\n                <span />\r\n                <span />\r\n                <span />\r\n            </button> \r\n\r\n            <h1 className=\"main-navigation__title\"><Link to=\"/\">EasyShop</Link></h1>\r\n            <nav className=\"main-navigation__header-nav\">\r\n                <NavLinks />\r\n            </nav> \r\n\r\n        </Layout>\r\n\r\n        <SideDrawer  show= {drawerIsOpen} >\r\n            <nav className=\"main-navigation__drawer-nav\">\r\n                <NavLinks onClick={closeDrawerBot} />\r\n            </nav>\r\n        </SideDrawer>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default MainNavigation; ","import React, { Component } from 'react';\nimport {BrowserRouter as Router,\n        Route,Redirect,Switch} from 'react-router-dom';\n\nimport ListBuilder from './Containers/ListBuilder/ListBuilder'\nimport Layout from './Components/Layout/Layout';\nimport MainNav from './Components/Layout/MainNav'\nimport MainNavigation from './Components/Layout/MainNav';\nimport Card from './Containers/ListBuilder/Card';\nimport './App.css';\nimport './index.css';\nimport InputBox from './Components/Layout/InputBox';\n\nclass App extends Component {\n  render(){ \n    return (\n      <Router>\n\n      <MainNavigation/>\n      <h2>Current List:</h2>\n      \n\n      <ListBuilder><p></p></ListBuilder>\n      </Router>     \n    );\n  }\n}\n\nexport default App;\n\n /*\n \n <Card className=\"input-wrapper\">\n <div className=\"input-elements\">Enter item: </div>\n <input className=\"input-elements\" type=\"text\" value=\"item\" />\n <input className=\"input-elements\" type=\"text\"value=\"flavor\" /> \n <input className=\"input-elements\" type=\"text\"value=\"quantity\" />\n\n <button className=\"input-elements\">Add</button>\n</Card>\n\n*/\n      ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}